AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: |
  SqsApplication

Parameters:
  Name:
    Type: String
    Default: sqsapplication

  Version:
    Type: String
    Description: version

  Owner:
    Type: String
    Description: Squad responsible for this parent stack.
    Default: bloxx
    
  Platform:
    Type: String
    AllowedValues:
      - bloxx
      - parknow
    Description: Platform name
    Default: bloxx

  System:
    Type: String
    Description: System name
    Default: Some

  Subsystem:
    Type: String
    Description: Subsystem name
    Default: Lambda

  AppEnvironment:
    Type: String
    Description: 'This is the application environment value that will be set as the environment variable value for application__environment. This parameter is introduced because there is a mismatch between AWS Infra environment "prod" and .NET Application environment "Production".'

  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - local
      - dev
      - test
      - sit
      - preprod
      - prod
    Description: Environment
    
  QueueTemplateUrl:
    Type: String
    Default: https://s3.amazonaws.com/px-automation-cloudformation-stacks/templates/queue/latest/queue.yaml
    Description: Queue creation nested stack reference. This should be a constant value defined in deployment system (octodeploy). All nested stack definitions are stored in dedicated bucket in px-automation account.
  LambdaTracingMode:
    Type: String
    Description: Tracing mode for all the lambda functions in the solution. The default value depends on the solution that is being developed. 
    Default: 'Active'
  LambdaLogSetupStackUrl:
    Type: String
    Description: Lambda Logging Setup nested stack reference. This should be a constant value defined in deployment system (octodeploy). All nested stack definitions are stored in dedicated bucket in px-automation account.
    Default: https://s3.amazonaws.com/px-automation-cloudformation-stacks/templates/lambdaLogConfig/latest/lambdaLogConfig.yaml
  FunctionName:
    Type: String
    Default: "SqsApplication"
  QueueName:
    Type: String
    Default: "SqsApplication-queue"
    Description: Sqs Queue 
  KmsKeyArn:
    Type: String
    Description: CMK ARN to encrypt S3 buckets and/or SSM Parameters
  LambdaVPCaccess:
    Type: String
    Default: false
    AllowedValues:
    - false
    - true
    Description: Extends or not the Lambda's execution IAM Role with VPC access (the ec2:CreateNetworkInterface, ec2:DescribeNetworkInterfaces and ec2:DeleteNetworkInterface permissions)
  LambdaVpcId:
    Type: String
    Default: ''
    Description: VPC ID that Lambda will run into
  LambdaSecurityGroupIds:
    Type: CommaDelimitedList
    Default: ''
    Description: Security Group IDs that Lambda will use
  LambdaVpcSubnetIds:
    Type: CommaDelimitedList
    Default: ''
    Description: VPC Subnet IDs that Lambda will run into (min 2 for HA)
  PermittedSourceARNs:
    Type: String
    Default: ""
    Description: Arns that can write to queue
  VisibilityTimeout: 
    Type: Number
    Default: 60
    Description: ReceiveMessageWaitTimeSeconds
  NewRelicApiKey:
    Type: String
    Description: New Relic license key which is used by ADOT lambda layer to send telemetry to New Relic.
  LambdaRoleTemplateUrl: 
    Type: String
    Default: https://s3.amazonaws.com/px-automation-cloudformation-stacks/templates/lambdaRole/latest/lambdaRole.yaml
    Description: Lambda Role creation nested stack reference. This should be a constant value defined in deployment system (octodeploy). All nested stack definitions are stored in dedicated bucket in px-automation account.

Conditions:
  EnableLogSetup: !Or [ !Equals [!Ref Environment, test],  !Equals [!Ref Environment, sit], !Equals [!Ref Environment, preprod], !Equals [!Ref Environment, prod] ]
  ProdTemplate:  !Equals [!Ref Environment, prod]
  XRayEnabled: !Equals [ !Ref LambdaTracingMode, 'active' ]
  HasVpcAccess: !And [ !Equals [!Ref LambdaVPCaccess, 'true'], !Not [!Equals [!Join ['', !Ref LambdaSecurityGroupIds], '']], !Not [!Equals [!Join ['', !Ref LambdaVpcSubnetIds], '']] ]

Globals:
  Function:
   Environment:
     Variables:
         Application__Version: !Ref Version
         Application__Environment: !Ref AppEnvironment
         Application__MachineName: Lambda
         Application__System: !Ref System
         Application__Subsystem: !Ref Subsystem
         Application__Platform: !Ref Platform
         XrayTracing__Enabled: !If [XRayEnabled, "true", "false"]
         OPENTELEMETRY_COLLECTOR_CONFIG_FILE: /var/task/collector.yaml
         NewRelic__ApiKey: !Ref NewRelicApiKey

Resources:
  SqsApplicationRoleStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Ref LambdaRoleTemplateUrl
      TimeoutInMinutes: 5
      Parameters:
        Environment: !Ref Environment
        Platform: !Ref Platform
        System: !Ref System
        Subsystem: !Ref Subsystem
        KmsKeyArn: !Ref KmsKeyArn
        LambdaVPCaccess: !Ref LambdaVPCaccess


  SqsApplicationQueueStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Ref QueueTemplateUrl
      TimeoutInMinutes: 5
      Parameters:
        Environment: !Ref Environment
        Platform: !Ref Platform
        System: !Ref System
        Subsystem: !Ref Subsystem
        Name: !Ref QueueName
        Owner: !Ref Owner 
        DeadLetterMaxReceiveCount: 5

  SqsApplicationFunction:
    Type: AWS::Serverless::Function 
    Properties:
      Role: !Sub ${SqsApplicationRoleStack.Outputs.RoleArn}
      Runtime: dotnet6
      MemorySize: 512
      Architectures: 
      - arm64
      Timeout: 30
      CodeUri: ./artifacts/Some.Lambda.zip
      Handler: "Some.Lambda::Some.Lambda.Function::FunctionHandler"
      FunctionName: !Join [ '-', [!Ref Environment, !Ref Platform, !Ref System, !Ref Subsystem, !Ref FunctionName] ]
      Layers:
      - !Sub arn:${AWS::Partition}:lambda:${AWS::Region}:901920570463:layer:aws-otel-collector-arm64-ver-0-68-0:1
      Environment: 
        Variables:
          Application__Name: !Ref FunctionName
          OTEL_SERVICE_NAME: !Join [ '-', [!Ref Environment, !Ref Platform, !Ref System, !Ref Subsystem, !Ref FunctionName] ]
          
      Tracing: !Ref LambdaTracingMode
      VpcConfig: !If
        - HasVpcAccess
        - SecurityGroupIds: !Ref LambdaSecurityGroupIds
          SubnetIds: !Ref LambdaVpcSubnetIds
        - !Ref 'AWS::NoValue'
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Queue: !Sub ${SqsApplicationQueueStack.Outputs.QueueArn}
            BatchSize: 1

  SqsApplicationSqsHandlerFunctionLogSetup:
    Type: AWS::CloudFormation::Stack
    Condition: EnableLogSetup
    Properties:
      Parameters:
        Environment: !Ref Environment
        FunctionName: !Join [ '-', [!Ref Environment, !Ref Platform, !Ref System, !Ref Subsystem, !Ref FunctionName] ]
        Platform: !Ref Platform
      TemplateURL: !Ref LambdaLogSetupStackUrl
      TimeoutInMinutes: 5

  
  SqsApplicationQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Join [ '-', [!Ref Environment, !Ref Platform, !Ref System, !Ref Subsystem, !Ref QueueName] ]
      PolicyDocument:
        Statement:
          -
            Effect: "Allow"
            Principal:
              AWS: "*"
            Action: ["sqs:SendMessage"]
            Resource: !Sub ${SqsApplicationQueueStack.Outputs.QueueArn}